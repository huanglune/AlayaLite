[build-system]
requires = [
    "setuptools>=65.0.0,<77",
    "pybind11>=2.10.0",
    "wheel",
    "conan>=2.0",
    "scikit-build-core",
]
build-backend = "scikit_build_core.build"

[project]
name = "alayalite"
version = "0.1.0a1"
authors = [{ name = "AlayaDB.AI", email = "dev@alayadb.ai" }]

description = "AlayaLite Python extension module"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "Apache-2.0" }
dependencies = ["pandas>=1.3.3"]

[project.urls]
"Homepage" = "https://github.com/AlayaDB-AI/AlayaLite"

[dependency-groups]
dev = [
    "pytest",
    "pytest-cov",
    "pytest-asyncio",
    "ruff",
    "fastapi",
    "uvicorn[standard]",
    "pydantic",
    "httpx",
]


# ----------------- build whl begin ------------------
[tool.scikit-build]
cmake.version = ">=3.15,<=3.31"
wheel.packages = ["python/src/alayalite"]
cmake.build-type = "Release"

[tool.scikit-build.cmake.define]
ENABLE_COVERAGE="OFF"
ENABLE_UNIT_TESTS="OFF"

[tool.cibuildwheel]
# build = "cp38-*"
build-frontend = "build[uv]"
skip = [
    "*-manylinux_i686",
    "*-musllinux*", # TODO: Adapt to muslLinux version
]
environment = { BUILD_TIME = "$(date)" }

[tool.cibuildwheel.linux]
manylinux-x86_64-image = "manylinux_2_28"
manylinux-aarch64-image = "manylinux_2_28"

archs = ["x86_64"]
before-build = "yum -y install perl-IPC-Cmd perl-Digest-SHA"
# ----------------- build whl end ------------------

[[tool.uv.index]]
# url = "https://mirrors.sustech.edu.cn/pypi/web/simple" # SUSTech mirror
# url = "https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple" # Tsinghua mirror
url = "https://pypi.org/simple"
default = true

# https://beta.ruff.rs/docs/settings/
[tool.ruff]
line-length = 120
# Exclude a variety of commonly ignored directories.
respect-gitignore = true
# extend-exclude = ["build_support"]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
    "UP006", # Allow using `f"{x=}"` for debugging
    "UP035", # Allow deprecated module
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
